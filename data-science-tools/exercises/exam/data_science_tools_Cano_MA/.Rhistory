library(tidyr)
library(dplyr)
library(ggplot2)
df <- read.csv("Airbnb_Milan.csv", header = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggplot2)
df <- read.csv("Airbnb_Milan.csv", header = TRUE)
# Empleamos “subset" y seleccionamos las columnas a tener en cuenta, simplemente copiando sus denominaciones del enunciado, a través del parámetro “select”:
df_sample <- subset(df, select = c("host_is_superhost", "host_identity_verified", "bathrooms", "bedrooms", "daily_price", "security_deposit", "minimum_nights", "number_of_reviews", "review_scores_rating"))
head(df_sample) # Comprobamos que los cambios se han aplicado en la muestra creada a partir del dataframe.
# El comando "recode" se encuentra en el paquete "car", instalado previamente en el entorno gráfico. Realizado esto, se aplica la función "recode" de la siguiente manera:
df_sample$host_is_superhost <- recode(df_sample$host_is_superhost, "0" = "SI", "1" = "NO")
head(df_sample) # Comprobamos que los cambios se han aplicado.
# Aplicamos la función "recode" como en el ejercicio anterior:
df_sample$host_identity_verified <- recode(df_sample$host_identity_verified, "0" = "VERIFICA", "1" = "NO VERIFICA")
head(df_sample) # Comprobamos que los cambios se han aplicado.
# La función “summary” devuelve un resumen estadístico de la muestra
summary(df_sample)
# Podemos filtrar la variable de la misma manera que indexamos un vector o bien utilizando la función "filter" de la librería "Dplyr" (aplicamos esta última).
# df_sample[df_sample$minimum_nights <= 7,]
filter(df_sample, minimum_nights <= 7)
# Tras aplicar el filtro, la longitud del dataframe se ha reducido de 9322 filas, como se puede comprobar en el ejercicio anterior, a 9005 filas.
